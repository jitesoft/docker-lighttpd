include:
  - file: /Scan/trivy.yml
    project: jitesoft/gitlab-ci-lib

stages:
  - download
  - build
  - containerize
  - fpm
  - extra
  - scan

download:
  stage: download
  before_script:
    - VERSION=$(wget -qO- https://download.lighttpd.net/lighttpd/releases-1.4.x/ | grep -oP "(?<=<a href=\"lighttpd-)([0-9]{0,3}[.][0-9]{0,3}[.][0-9]{0,3})" | sort -r -u - | awk 'NR==1{print $1}')
  image: registry.gitlab.com/jitesoft/dockerfiles/misc:latest
  script:
    - echo "${VERSION}" > version.txt
    - curl -OsS https://download.lighttpd.net/lighttpd/releases-1.4.x/lighttpd-${VERSION}.tar.xz
    - curl -OsS https://download.lighttpd.net/lighttpd/releases-1.4.x/lighttpd-${VERSION}.tar.xz.asc
    - curl -OsS https://download.lighttpd.net/lighttpd/releases-1.4.x/lighttpd-${VERSION}.sha256sum
    - |
      for key in $(cat keys.txt); do \
        gpg --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-keys "$key" 2>&1 || \
        gpg --keyserver hkp://keyserver.pgp.com:80 --recv-keys "$key" 2>&1 || \
        gpg --keyserver hkp://pgp.mit.edu:80 --recv-keys "$key"; \
      done
    - gpg --verify lighttpd-${VERSION}.tar.xz.asc lighttpd-${VERSION}.tar.xz
    - grep " lighttpd-${VERSION}.tar.xz\$" lighttpd-${VERSION}.sha256sum lighttpd-${VERSION}.tar.xz
  artifacts:
    expire_in: 1 day
    paths:
      - version.txt
      - lighttpd-*.tar.xz

.build:
  image: registry.gitlab.com/jitesoft/dockerfiles/misc/buildbase:latest
  needs:
    - download
  stage: build
  before_script:
    - export CCACHE_DIR="${CI_PROJECT_DIR}/ccache"
    - VERSION=$(cat version.txt)
    - export PATH="/usr/lib/ccache/bin:$PATH"
    - if [ ! -d "ccache" ]; then mkdir ccache; fi
    - apk add --force-overwrite --no-cache build-base bsd-compat-headers flex libressl-dev bzip2-dev lua5.3-dev openldap-dev libxml2-dev sqlite-dev libev-dev pcre-dev
    - mkdir src
    - tar -xJhf lighttpd-${VERSION}.tar.xz --strip-components=1 -C src
  script:
    - cd src
    - ./configure --prefix=/usr/local --with-lua --with-openssl --with-ldap
    - make -j4
    - make install
    - ccache -s
    - $(cd /usr/local && tar -czf /tmp/lighttpd.tar.gz *)
    - cd ..
    - mkdir out
    - mv /tmp/lighttpd.tar.gz out/lighttpd-${ARCH}.tar.gz
    - mv version.txt out/version.txt
  artifacts:
    paths:
      - out
    expire_in: 1 day
  cache:
    paths:
      - ccache
    key: lighttpd.build.ccache-${ARCH}

build:arm:
  extends: .build
  tags:
    - native-aarch64
  variables:
    GIT_STRATEGY: none
    ARCH: arm64

build:amd:
  extends: .build
  tags:
    - native-amd64
  variables:
    GIT_STRATEGY: none
    ARCH: amd64

containerize:lighttpd:
  stage: containerize
  needs:
    - build:amd
    - build:arm
  image: registry.gitlab.com/jitesoft/dockerfiles/misc:latest
  script:
    - mv startup out/startup
    - mv healthcheck out/healthcheck
    - mv lighttpd.conf out/lighttpd.conf
    - mv conf.d out/
    - VERSION=$(cat out/version.txt)
    - TAGS=$(helper "${CI_REGISTRY_IMAGE},jitesoft/lighttpd,ghcr.io/jitesoft/lighttpd" "latest,${VERSION}")
    - docker buildx build --platform linux/amd64,linux/arm64 --progress plain --push ${TAGS} --build-arg VERSION=${VERSION} .
  tags: [ jitesoft, buildx, protected ]
  artifacts:
    paths:
      - out/version.txt

containerize:lighttpd:fpm:
  needs:
    - containerize:lighttpd
  stage: fpm
  image: registry.gitlab.com/jitesoft/dockerfiles/misc:latest
  script:
    - VERSION=$(cat out/version.txt)
    - TAGS=$(helper taglist "${CI_REGISTRY_IMAGE},jitesoft/lighttpd,ghcr.io/jitesoft/lighttpd" "latest-fpm,${VERSION}-fpm,fpm")
    - cd cgi
    - docker buildx build --platform linux/amd64,linux/arm64 --progress plain --push ${TAGS} .
  tags: [ jitesoft, buildx, protected ]

push:none-multi-arch:
  needs:
    - containerize:lighttpd
    - containerize:lighttpd:fpm
  stage: extra
  image: registry.gitlab.com/jitesoft/dockerfiles/misc:latest
  script:
    - VERSION=$(cat out/version.txt)
    - docker pull ${CI_REGISTRY_IMAGE}:latest
    - helper multitag ${CI_REGISTRY_IMAGE}:latest quay.io/jitesoft/lighttpd:latest quay.io/jitesoft/lighttpd:${VERSION}
    - helper multipush quay.io/jitesoft/lighttpd:latest quay.io/jitesoft/lighttpd:${VERSION}
    - docker pull ${CI_REGISTRY_IMAGE}:fpm
    - helper multitag ${CI_REGISTRY_IMAGE}:latest quay.io/jitesoft/lighttpd:latest-fpm quay.io/jitesoft/lighttpd:${VERSION}-fpm quay.io/jitesoft/lighttpd:fpm
    - helper multipush quay.io/jitesoft/lighttpd:latest-fpm quay.io/jitesoft/lighttpd:${VERSION}-fpm quay.io/jitesoft/lighttpd:fpm
  tags: [ jitesoft, docker, protected, native-amd64 ]

scan:
  needs:
    - containerize:lighttpd
  extends: .container_scanning
  variables:
    SCANNING_IMAGE_NAME: "${CI_REGISTRY_IMAGE}:latest"
    GIT_STRATEGY: none
